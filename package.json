{
  "name": "twilight-vscode-extension",
  "version": "1.0.10",
  "description": "The intelligent tooling to use Salla's Twilight Theme Engine in your VSCode editor.",
  "author": "Salla App (https://github.com/SallaApp)",
  "displayName": "Twilight Themes AutoComplete",
  "publisher": "Salla",
  "license": "MIT",
  "homepage": "https://github.com/SallaApp/twilight-vscode-extension",
  "bugs": {
    "url": "https://github.com/SallaApp/twilight-vscode-extension/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/SallaApp/twilight-vscode-extension.git"
  },
  "icon": "images/logo.png",
  "engines": {
    "vscode": "^1.68.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Other"
  ],
  "keywords": [
    "php",
    "twig",
    "snippets",
    "salla"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "dist/extension",
  "contributes": {
    "html": {
      "customData": [
        "./data/SallaJson/web.components/web-components.html-data.json"
      ]
    },
    "languages": [
      {
        "id": "html",
        "aliases": [
          "HTML",
          "twig"
        ],
        "extensions": [
          ".twig",
          ".html",
          ".html.twig"
        ],
        "configuration": "./data/Twig/languages/twig.configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "html",
        "scopeName": "text.html.twig",
        "path": "./data/Twig/syntaxes/twig.tmLanguage",
        "embeddedLanguages": {
          "source.json": "json",
          "source.css": "css",
          "source.css.scss": "scss",
          "source.js": "javascript",
          "source.ts": "typescript"
        }
      }
    ],
    "snippets": [
      {
        "language": "html",
        "path": "./data/SallaJson/salla.snippets.autogenerated.json"
      },
      {
        "language": "html",
        "path": "data/SallaJson/hover/salla.functions.json"
      },
      {
        "language": "html",
        "path": "./data/Twig/snippets/snippets.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Twig Language",
      "properties": {
        "Salla.twilight-vscode-extension.hover": {
          "type": "boolean",
          "default": true,
          "description": "Whether to enable/disable Twig hover."
        },
        "Salla.twilight-vscode-extension.braceLine": {
          "type": "boolean",
          "default": true,
          "description": "If true an empty line will be inserted after opening curly braces and before closing curly braces."
        },
        "Salla.twilight-vscode-extension.bracePadding": {
          "type": "boolean",
          "default": true,
          "description": "Inserts a space after the start of a container and before the end of the container if the contents of that container are not indented; such as: conditions, function arguments, and escaped sequences of template strings."
        },
        "Salla.twilight-vscode-extension.braces": {
          "type": "boolean",
          "default": true,
          "description": "Determines if opening curly braces will exist on the same line as their condition or be forced onto a new line."
        },
        "Salla.twilight-vscode-extension.commentLine": {
          "type": "boolean",
          "default": true,
          "description": "If a blank new line should be forced above comments."
        },
        "Salla.twilight-vscode-extension.comments": {
          "type": "boolean",
          "default": true,
          "description": "This will determine whether comments should always start at position 0 of each line or if comments should be indented according to the code."
        },
        "Salla.twilight-vscode-extension.compressedCss": {
          "type": "boolean",
          "default": true,
          "description": "If CSS should be beautified in a style where the properties and values are minifed for faster reading of selectors."
        },
        "Salla.twilight-vscode-extension.correct": {
          "type": "boolean",
          "default": true,
          "description": "Automatically correct some sloppiness in code."
        },
        "Salla.twilight-vscode-extension.cssInsertLines": {
          "type": "boolean",
          "default": true,
          "description": "Inserts new line characters between every CSS code block."
        },
        "Salla.twilight-vscode-extension.elseLine": {
          "type": "boolean",
          "default": true,
          "description": "If else_line is true then the keyword 'else' is forced onto a new line."
        },
        "Salla.twilight-vscode-extension.endComma": {
          "type": "string",
          "enum": [
            "always",
            "never",
            "none"
          ],
          "default": true,
          "description": "If there should be a trailing comma in arrays and objects. Value multiline only applies to modes beautify and diff."
        },
        "Salla.twilight-vscode-extension.forceAttribute": {
          "type": "boolean",
          "default": true,
          "description": "If all markup attributes should be indented each onto their own line."
        },
        "Salla.twilight-vscode-extension.forceIndent": {
          "type": "boolean",
          "default": true,
          "description": "Will force indentation upon all content and tags without regard for the creation of new text nodes."
        },
        "Salla.twilight-vscode-extension.formatArray": {
          "type": "string",
          "enum": [
            "default",
            "indent",
            "inline"
          ],
          "default": "default",
          "description": "Determines if all array indexes should be indented, never indented, or left to the default."
        },
        "Salla.twilight-vscode-extension.formatObject": {
          "type": "string",
          "enum": [
            "default",
            "indent",
            "inline"
          ],
          "default": "default",
          "description": "Determines if all object keys should be indented, never indented, or left to the default."
        },
        "Salla.twilight-vscode-extension.functionName": {
          "type": "boolean",
          "default": true,
          "description": "If a space should follow a JavaScript function name."
        },
        "Salla.twilight-vscode-extension.indentStyle": {
          "type": "string",
          "enum": [
            "space",
            "tab"
          ],
          "default": "tab",
          "description": "Choose to indent using tabs or spaces."
        },
        "Salla.twilight-vscode-extension.indentLevel": {
          "type": "integer",
          "default": 0,
          "description": "How much indentation padding should be applied to beautification? This option is internally used for code that requires switching between libraries."
        },
        "Salla.twilight-vscode-extension.tabSize": {
          "type": "integer",
          "default": 0,
          "description": "0 will default to the editor's tab size. Stores the number of 'inchar' values to comprise a single indentation."
        },
        "Salla.twilight-vscode-extension.methodChain": {
          "type": "integer",
          "default": 0,
          "description": "When to break consecutively chained methods and properties onto separate lines. A negative value disables this option. A value of 0 ensures method chains are never broken."
        },
        "Salla.twilight-vscode-extension.neverFlatten": {
          "type": "boolean",
          "default": true,
          "description": "If destructured lists in script should never be flattend."
        },
        "Salla.twilight-vscode-extension.newLine": {
          "type": "boolean",
          "default": true,
          "description": "Insert an empty line at the end of output."
        },
        "Salla.twilight-vscode-extension.noCaseIndent": {
          "type": "boolean",
          "default": true,
          "description": "If a case statement should receive the same indentation as the containing switch block."
        },
        "Salla.twilight-vscode-extension.noLeadZero": {
          "type": "boolean",
          "default": true,
          "description": "Whether leading 0s in CSS values immediately preceeding a decimal should be removed or prevented."
        },
        "Salla.twilight-vscode-extension.objectSort": {
          "type": "boolean",
          "default": true,
          "description": "Sorts markup attributes and properties by key name in script and style."
        },
        "Salla.twilight-vscode-extension.preserve": {
          "type": "integer",
          "default": 2,
          "description": "The maximum number of consecutive empty lines to retain."
        },
        "Salla.twilight-vscode-extension.preserveComment": {
          "type": "boolean",
          "default": true,
          "description": "Prevent comment reformatting due to option wrap."
        },
        "Salla.twilight-vscode-extension.quoteConvert": {
          "type": "string",
          "enum": [
            "double",
            "none",
            "single"
          ],
          "default": "none",
          "description": "If the quotes of script strings or markup attributes should be converted to single quotes or double quotes."
        },
        "Salla.twilight-vscode-extension.space": {
          "type": "boolean",
          "default": true,
          "description": "Inserts a space following the function keyword for anonymous functions."
        },
        "Salla.twilight-vscode-extension.spaceClose": {
          "type": "boolean",
          "default": true,
          "description": "Markup self-closing tags end will end with ' />' instead of '/>'."
        },
        "Salla.twilight-vscode-extension.tagMerge": {
          "type": "boolean",
          "default": true,
          "description": "Allows immediately adjacement start and end markup tags of the same name to be combined into a single self-closing tag."
        },
        "Salla.twilight-vscode-extension.tagSort": {
          "type": "boolean",
          "default": true,
          "description": "Sort child items of each respective markup parent element."
        },
        "Salla.twilight-vscode-extension.ternaryLine": {
          "type": "boolean",
          "default": true,
          "description": "If ternary operators in JavaScript ? and : should remain on the same line."
        },
        "Salla.twilight-vscode-extension.unformatted": {
          "type": "boolean",
          "default": true,
          "description": "If markup tags should have their insides preserved. This option is only available to markup and does not support child tokens that require a different lexer."
        },
        "Salla.twilight-vscode-extension.variableList": {
          "type": "string",
          "enum": [
            "each",
            "list",
            "none"
          ],
          "default": "none",
          "description": "If consecutive JavaScript variables should be merged into a comma separated list or if variables in a list should be separated."
        },
        "Salla.twilight-vscode-extension.vertical": {
          "type": "boolean",
          "default": true,
          "description": "If lists of assignments and properties should be vertically aligned. This option is not used with the markup lexer."
        },
        "Salla.twilight-vscode-extension.wrap": {
          "type": "integer",
          "default": 0,
          "description": "Character width limit before applying word wrap. A 0 value disables this option. A negative value concatenates script strings."
        }
      }
    }
  },
  "capabilities": {
    "hoverProvider": "true",
    "completionProvider": {
      "triggerCharacters": [
        "S",
        "s",
        ".",
        ":",
        "=",
        ",",
        ";",
        "*",
        "&",
        "|",
        "!",
        "?",
        "<",
        ">",
        "{",
        "}",
        "[",
        "]",
        "(",
        ")",
        "\"",
        "'",
        "\\",
        "/"
      ]
    },
    "documentFormattingProvider": "true",
    "documentRangeFormattingProvider": "true",
    "textDocument/comment": {
      "supported": "true",
      "defaultValue": "true"
    }
  },
  "scripts": {
    "snippets-generate": "node ./scripts/snippets.autogenerate.js",
    "vscode:prepublish": "yarn run build",
    "package": "vsce package --yarn",
    "publish": "vsce publish --allow-star-activation ",
    "build": "yarn run snippets-generate &&  rollup -c"
  },
  "devDependencies": {
    "@types/mocha": "^9.1.1",
    "@types/node": "^20.5.6",
    "eslint": "^8.18.0",
    "eslint-config-prettier": "^9.0.0",
    "typescript": "^5.2.2",
    "vscode": "^1.1.37"
  },
  "dependencies": {
    "rollup": "^2.74.1",
    "rollup-plugin-babel": "^4.4.0",
    "rollup-plugin-image-assets": "^1.0.0",
    "rollup-plugin-image-files": "^1.4.2",
    "rollup-plugin-json": "^4.0.0",
    "rollup-plugin-terser": "^7.0.2"
  }
}
